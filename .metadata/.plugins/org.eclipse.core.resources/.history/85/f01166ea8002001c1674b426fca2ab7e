package aula2;

public class ExerciciosComplementares {
	
	public static void main(String[] args) {
		
		/*
		 *	1. Consulte a API do JAVA e descreva os seguintes métodos da classe Vector:
			• insertElementAt(E obj, int index);
				Insere o objeto especificado no indicide especiado do vetor. Os componentes
				com indices maior ou igual ao indice passado como parametro são deslocados
				para cima.
				
			• isEmpty();
				Verifica se o vetor possui algum componente retornando true caso o tamanho
				do vetor seja zero(nao possui componentes) e false caso contrario.
							
			• elementAt(int index);
				Pesquisa e retorna o componente do indicxe passado como parametro
				
			• firstElement();
				Retorna o primeiro componente do vetor, ou seja, o que está no indice zero.
				
			• get(int index);
				Retorna o elemento na posição especificada neste vetor.
				
			• lastElement();
				Retorna o último elemento do vetor.
				
			• remove(Object o);
				Caso o elemento exista no vetor, ele é removido do indice mais baixo,
				ou seja, é removido a primeira ocorrencia do elemento passado como
				parametro no vetor.
				
			• removeElement(Object obj);
				Remove a primeira ocorrencia do elemento especificado no vetor, os elementos
				com índices maiores ou igual, são deslocados para baixo ficando com um
				indice menor.
				
			• removeElementAt(int index);
				Remove o componente no indice especificado. Os componentes com indices maiores
				são deslocados para baixo e o vetor é reduzido um indice no tamanho.
				
			
			2. Escreva o código de um programa que mostre a utilização dos métodos da 
			classe Vector que você aprendeu. Escreva mensagens dizendo o que o método 
			irá fazer depois execute o método e mostre o vetor.
			
			
			3. Consulta a API do Java e descreva os seguites métodos das classes Wrapper.
			
			4. Consulte a API do Java e descreva os métodos ou constantes da classe Integer:
			• MAX_VALUE;
				Uma constante contendo o maior valor que pode ser armazenado em um int.
				
			• MIN_VALUE;
				Uma constante contendo o menor valor que pode ser armazenado em um int.
						
			• Integer(int value);
				Constroi um novo objeto Integer para representar o valor int especificado.
				
			• Integer(String s);
				Constroi um novo objeto Integer para representar o valor int passado como
				string no parametro. A String é convertida em int.
				
			• parseInt(String s);
				Transforma um argumento String que representa um decimal, em um valor int.
				A String deve conter apenas caracteres decimais, podendo tambem ter os
				sinas menos(-) e mais(+) na frente.
			
			• toString(int i);
				Retorna o objeto String que representa o inteiro passado como argumento.
				O inteiro é convertido em uma representação decimal com sinal na base 10.
			
			• toString();
				Converte um objeto Integer para um objeto String como representação decimal
				com sinal na base 10.
			
			5. Consulte a API do Java e descreva os métodos ou constantes da classe Float:
			• SIZE;
				
			• intValue();
				Trasforma o objeto Float em uma valor int caso o mesmo caiba no tipo int.
				
			• Float(String s);
				Instancia um novo objeto Float que representa com um valor float o objeto
				String passado como parametro.
				
			• Float(double s);
				Instancia um novo objeto Float que representa com um valor float o valor
				double passado como parametro.
				
			• toString(float f);
				Retorna o objeto String que representa o valor do tipo primitivo 
				float passado como parametro.
				
			• toString();
				Converte o objeto Float para um objeto String como representação decimal.
				
			• Float(float s);
				Instancia um novo objeto Float que representa o tipo primitivo float
				passado como parametro.
			
			6. O construtor Float(float s) qual a vantagem de usar esse construtor 
			sendo que o argumento também é um float?
				A vantagem é que, ao transforma um tipo primitivo em um objeto, será possivel
				utilizar os métodos daquela classe para facilitar o código caso precise transformar
				valores, entre outras opções.
		 */
		
		
	}

}
